"""
Каждый объект класса UrTube должен обладать следующими атрибутами и методами:

 Атриубты: users(список объектов User), videos(список объектов Video), current_user(текущий пользователь, User)
Метод log_in, который принимает на вход аргументы: nickname, password и пытается найти пользователя в users с такими же
логином и паролем. Если такой пользователь существует, то current_user меняется на найденного. Помните, что password
передаётся в виде строки, а сравнивается по хэшу.
Метод register, который принимает три аргумента: nickname, password, age, и добавляет пользователя в список, если
пользователя не существует (с таким же nickname). Если существует, выводит на экран: "Пользователь {nickname} уже
существует". После регистрации, вход выполняется автоматически.
Метод log_out для сброса текущего пользователя на None.
Метод add, который принимает неограниченное кол-во объектов класса Video и все добавляет в videos, если с таким же
названием видео ещё не существует. В противном случае ничего не происходит.
Метод get_videos, который принимает поисковое слово и возвращает список названий всех видео, содержащих поисковое слово.
Следует учесть, что слово 'UrbaN' присутствует в строке 'Urban the best' (не учитывать регистр).
Метод watch_video, который принимает название фильма, если не находит точного совпадения(вплоть до пробела), то ничего
не воспроизводится, если же находит - ведётся отчёт в консоль на какой секунде ведётся просмотр. После текущее время
просмотра данного видео сбрасывается.

Для метода watch_video так же учитывайте следующие особенности:

Для паузы между выводами секунд воспроизведения можно использовать функцию sleep из модуля time.
Воспроизводить видео можно только тогда, когда пользователь вошёл в UrTube. В противном случае выводить в консоль
надпись: "Войдите в аккаунт, чтобы смотреть видео"
Если видео найдено, следует учесть, что пользователю может быть отказано в просмотре, т.к. есть ограничения 18+. Должно
выводиться сообщение: "Вам нет 18 лет, пожалуйста покиньте страницу"
После воспроизведения нужно выводить: "Конец видео"
"""
class UrTube:

    def __init__(self,name,number_of_floors):
        self.users = []  # (список объектов User)
        self.videos = []  # (список объектов Video)
        #self.current_user = User.__init__()  # (текущий пользователь, User)

    def add (self, *video):
        for i in video:
            if i in self.videos:
                continue
            self.videos.append(i)


"""
Каждый объект класса Video должен обладать следующими атрибутами и методами:

Атриубуты: title(заголовок, строка), duration(продолжительность, секунды), time_now(секунда остановки (изначально 0)), 
adult_mode(ограничение по возрасту, bool (False по умолчанию))
"""
class Video:
    #( title, duration, time_now = 0, adult_mode = False):
    pass

"""
Каждый объект класса User должен обладать следующими атрибутами и методами:

Атриубуты: nickname(имя пользователя, строка), password(в хэшированном виде, число), age(возраст, число)
"""
class User: #(nickname, password, age)
    pass



ur = UrTube()

v1 = Video('Лучший язык программирования 2024 года', 200)

v2 = Video('Для чего девушкам парень программист?', 10, adult_mode=True)



# Добавление видео

ur.add(v1, v2)



# Проверка поиска

#print(ur.get_videos('лучший'))

#print(ur.get_videos('ПРОГ'))



# Проверка на вход пользователя и возрастное ограничение

#ur.watch_video('Для чего девушкам парень программист?')

#ur.register('vasya_pupkin', 'lolkekcheburek', 13)

#ur.watch_video('Для чего девушкам парень программист?')

#ur.register('urban_pythonist', 'iScX4vIJClb9YQavjAgF', 25)

#ur.watch_video('Для чего девушкам парень программист?')



# Проверка входа в другой аккаунт

#ur.register('vasya_pupkin', 'F8098FM8fjm9jmi', 55)

#print(ur.current_user)



# Попытка воспроизведения несуществующего видео

#ur.watch_video('Лучший язык программирования 2024 года!')